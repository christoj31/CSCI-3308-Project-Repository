<div class="container mt-5">
    <table class="table table-bordered">
        <thead>
            <tr>
                <th>Job ID</th>
                <th>Job Name</th>
                <th>Company</th>
                <th>Job Link</th>
                <th>Due Date</th>
                <th>Point of Contact</th> <!--TODO: add point of contact tooltip (Christo)-->
                <th>Contact Log</th>
                <th>Meeting Log</th>
                <th>Target Location</th>
                <th>Department</th>
                <th>Status</th>
                <th>Countdown</th>
                <th>Edit</th>
                <th>Delete</th>
            </tr>
        </thead>
        <tbody>
            {{#each results}}
            <tr>
                <td>{{jobid}}</td>
                <td>{{jobtitle}}</td>
                <td><a class="link link-secondary link-hover" href="{{jobapplicationlink}}">{{jobapplicationlink}}</a></td>
                <td>{{due_date_string}}</td>
                  
                <!-- Status Column with Dropdown Button -->
                <td>
                    <div class="relative inline-block">
                        <button
                            class="status-button text-white bg-blue-700 hover:bg-blue-800 focus:ring-4 focus:outline-none focus:ring-blue-300 font-medium rounded-lg text-sm px-5 py-2.5 text-center inline-flex items-center dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800"
                            type="button">
                            <span class="statusButtonText">Not Applied</span> <!-- Set default to "Not Applied" -->
                            <svg class="w-2.5 h-2.5 ml-2" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none"
                                viewBox="0 0 10 6">
                                <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                    d="m1 1 4 4 4-4" />
                            </svg>
                        </button>

                        <!-- Dropdown Menu -->
                        <div
                            class="status-dropdown z-10 hidden bg-white divide-y divide-gray-100 rounded-lg shadow w-44 dark:bg-gray-700 mt-2 absolute">
                            <ul id="selector" class="py-2 text-sm text-gray-700 dark:text-gray-200">
                                <li><a id="applied" href="#" class="dropdown-option block px-4 py-2 hover:bg-gray-100 dark:hover:bg-gray-600 dark:hover:text-white">Applied</a></li>
                                <li><a id="not-applied" href="#" class="dropdown-option block px-4 py-2 hover:bg-gray-100 dark:hover:bg-gray-600 dark:hover:text-white">Not Applied</a></li>
                                <li><a id="accepted" href="#" class="dropdown-option block px-4 py-2 hover:bg-gray-100 dark:hover:bg-gray-600 dark:hover:text-white">Accepted</a></li>
                                <li><a id="denied" href="#" class="dropdown-option block px-4 py-2 hover:bg-gray-100 dark:hover:bg-gray-600 dark:hover:text-white">Declined</a></li>
                            </ul>
                        </div>
                    </div>
                    <p id="selectedStatus" style="display: none">Selected Status: None</p>
                </td>

                <td>
                    <div class="grid auto-cols-max grid-flow-col gap-5 text-center">
                        <div class="bg-primary rounded-box flex flex-col p-2">
                            <span class="countdown text-3xl">
                            <span style="--value:{{countdown}};"></span>
                            </span>
                            days
                        </div>
                    </div>
                </td>

                <td>
                    <div class="grid auto-cols-max grid-flow-col gap-5 text-center">
                            <button class="btn btn-outline btn-secondary"
                                onclick="editModal(this)"
                                data-jobid="{{jobid}}"
                                data-jobtitle="{{jobtitle}}"
                                data-joblink="{{jobapplicationlink}}"
                                data-due_date="{{due_date}}"
                                data-status="{{applicationstepid}}">
                                Edit
                            </button>        
                    </div>        
                </td>

                <td>
                    <div class="grid auto-cols-max grid-flow-col gap-5 text-center">
                        <button class="btn btn-outline btn-secondary"
                            <button id="delete-modal"
                                class="btn btn-secondary"
                                onclick="deleteModal(this)"
                                data-jobid="{{jobid}}">
                                ✕
                            </button>
                    </button>
                </td>
            </tr>
            {{/each}}
        </tbody>
    </table>
</div>

<dialog id="edit_modal" class="modal">
    <div class="modal-box">
    <form method="dialog">
    <button class="btn btn-sm btn-circle btn-ghost absolute right-2 top-2">✕</button>
    </form>
    <h3 class="text-lg font-bold text-center">Edit Event:</h3>
    <form action="/editModal" method="POST">
    <div class="form-group">
            <input ctype="text" class="input input-bordered w-full" id="jobid" name="jobid" style="display: none;">
        </div>
        <div class="form-label" style="display: none;">
            <label for="jobid">jobid:</label>
        </div>
        <div class="form-group">
            <input ctype="text" class="input input-bordered w-full" id="jobid_holder" name="jobid_holder" disabled>
        </div>
        <div class="form-label">
            <label for="jobid_holder">Job ID:</label>
        </div>
        <div class="form-group">
            <input ctype="text" class="input input-bordered w-full" id="edit_job_name" name="job_name" placeholder="enter the job name...">
        </div>
        <div class="form-label">
            <label for="job_name">Job Name:</label>
        </div>
        <div class="form-group">
            <input type="link" class="input input-bordered w-full" id="edit_job_link" name="job_link" placeholder="enter the job link...">
        </div>
        <div class="form-label">
            <label for="job link">Job Link:</label>
        </div>
        <div class="form-group">
            <input type="date" class="input input-bordered w-full" id="edit_due_date" name="due_date" placeholder="2024-11-14" required>
        </div>
        <div class="form-label">
            <label for="due_date">Due Date:</label>
        </div>

        <div class="form-group">
            <select class="input input-bordered w-full" id="edit_status" name="status">
                <option>Select Status...</option>
                <option value="applied">Applied</option>
                <option value="not-applied">Not Applied</option>
                <option value="accepted">Accepted</option>
                <option value="denied">Denied</option>
            </select>
        </div>
        <div class="form-label" style="padding-bottom: 15px;">
            <label for="status">Status:</label>
        </div>
    
        <button type="submit" class="btn btn-primary" style="float: right; padding: 15px 32px;">Update</button>
    </form>
        <div style="padding-top: 20px">
            <form method="dialog">
                <button class="btn btn-secondary" style="float: right; margin-right: 5px;">Close</button>
            </form>
        </div>
    </div>
</dialog>

<script>

    // Function for opening the edit modal
    function editModal(button) {
        console.log('EDITMODAL FUNCTION ENTERED');
        const jobId = button.getAttribute('data-jobid');
        const jobTitle = button.getAttribute('data-jobtitle');
        const jobLink = button.getAttribute('data-joblink');
        const status = button.getAttribute('data-status');
        let newstatus = 0;
        console.log('EARLY STATUS: ', status);
        switch(status) {
            case 0: 
                newstatus = 'none';
                break;
            case '1': 
                newstatus = 'applied';
                break;
            case '2': 
                newstatus = 'not-applied';
                break;
            case '3': 
                newstatus = 'accepted';
                break;
            case '4': 
                newstatus = 'denied';
                break;
        }

        document.getElementById('jobid').value = jobId;
        document.getElementById('jobid_holder').value = jobId;
        document.getElementById('edit_job_name').value = jobTitle;
        document.getElementById('edit_job_link').value = jobLink;
        document.getElementById('edit_status').value = newstatus;

        document.getElementById('selectedStatus').value = newstatus;

        document.getElementById('edit_modal').showModal();
    }

// Select all dropdown options
const dropdownOptions = document.querySelectorAll('.dropdown-option');
const statusButtonText = document.querySelector('.statusButtonText');
const selectedStatusDisplay = document.getElementById('selectedStatus');

// Add click event listeners to each option
dropdownOptions.forEach(option => {
  option.addEventListener('click', async (event) => {
    event.preventDefault();  // Prevents default anchor behavior

    // Get the selected text
    const selectedStatusDisplay = event.target.textContent;
    console.log('SELECTED STATUS: ', selectedStatusDisplay);

    const getjobidquery = 'SELECT jobid FROM jobs';
    // Display the selected status (or handle as needed)
    //document.getElementById('selectedStatus').textContent = `Selected Status: ${selectedStatus}`;
    //console.log('NEW STATUS: ', `Selected Status: ${selectedStatus}`)
    
    // Optionally, you could also hide the dropdown here if needed
    //document.querySelector('.status-dropdown').classList.add('hidden');
  });
});

    document.addEventListener("DOMContentLoaded", function () {
        // Toggle dropdown visibility for each status button
        document.querySelectorAll('.status-button').forEach(button => {
            button.addEventListener('click', function () {
                const dropdown = this.nextElementSibling;
                dropdown.classList.toggle('hidden');
            });
        });

        // Update button text and hide dropdown when selecting an option
        document.querySelectorAll('.dropdown-option').forEach(option => {
            option.addEventListener('click', function (event) {
                event.preventDefault();

                const button = this.closest('.relative').querySelector('.status-button');
                const dropdown = this.closest('.status-dropdown');

                // Update the button text to the selected status
                console.log('THIS CONTEXT: ', this.textContent);
                button.querySelector('.statusButtonText').textContent = this.textContent;
                const status = document.getElementById('selector');
                const applied = document.getElementById('applied');
                document.getElementById('applied').textContent = 'TEST';
                //document.getElementById('selector') = 'applied';
                console.log('A STATUS: ', applied);


                // Hide the dropdown
                dropdown.classList.add('hidden');
            });
        });
    });

function deleteModal(button){
    console.log("deleteModal passed");
    const delJobID = button.getAttribute('data-jobid');
    {{!-- console.log("Job ID: ", delJobID); --}}


    const confirmation = confirm(`Are you sure you want to delete job ID: ${delJobID}?`);
    if (confirmation) {
        fetch(`/delete-job`, {
            method: 'DELETE',
            headers: {'Content-Type': 'application/json'},
            body: JSON.stringify({ jobID: delJobID })
        })
        .then(response => response.json())
        .then(data => {
            if(data.message === 'Job successfully deleted') {
                alert(`Job with ID ${delJobID} has been successfully deleted.`);
                button.closest('tr').remove();
            } else {
                alert(data.message);
            }
        })
        .catch(error => {
            console.error('Error deleting job:', error);
            alert('An error occurred while deleting the job.');
        });
    }
}

</script>